/*--------------------------------*- C++ -*----------------------------------*\
|                                                                             |
|    HiSA: High Speed Aerodynamic solver                                      |
|    Copyright (C) 2014-2017 Johan Heyns - CSIR, South Africa                 |
|    Copyright (C) 2014-2017 Oliver Oxtoby - CSIR, South Africa               |
|                                                                             |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    "(k|omega|nuTilda)"
    {
        solver          smoothSolver;
        smoother        symGaussSeidel;
        tolerance       1e-10;
        relTol          0.1;
        minIter         1;
    }

    "(k|omega|nuTilda)Final"
    {
        $nuTilda;
        tolerance       1e-10;
        reltol          0.0;
        minIter         1;
    }

    yPsi
    {
        solver          GAMG;
        smoother        GaussSeidel;
        cacheAgglomeration true;
        nCellsInCoarsestLevel 10;
        agglomerator    faceAreaPair;
        mergeLevels     1;
        tolerance       1e-6;
        relTol          0;
    }
}

relaxationFactors
{
    equations
    {
        "nuTilda.*"    0.5;
        "k.*"          0.5;
        "omega.*"      0.5;
        yWall          0.7;
    }
}

Jacobian LaxFriedrich;

flowSolver
{
    solver            GMRES;
    GMRES
    {
        inviscidJacobian  LaxFriedrich;
        viscousJacobian   laplacian;
        preconditioner    LUSGS;

        maxIter           20;
        nKrylov           8;
        solverTolRel      1e-1 (1e-1 1e-1 1e-1) 1e-1;
    }
}

pseudoTime
{
    pseudoTol          1e-6 (1e-6 1e-6 1e-6) 1e-6;
    pseudoCoNum        1;
    pseudoCoNumMax     25.0;

    pseudoCoNumMaxIncreaseFactor  1.25;
    pseudoCoNumMin                0.1;

    localTimestepping             true;
    localTimesteppingBounding     true;
    localTimesteppingLowerBound   0.95;
}

// ************************************************************************* //
